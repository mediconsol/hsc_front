<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- 페이지 헤더 -->
  <div class="md:flex md:items-center md:justify-between">
    <div class="flex-1 min-w-0">
      <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
        📋 부서별 게시판
      </h2>
      <p class="mt-1 text-sm text-gray-500">
        부서별 업무 소통 및 정보 공유
      </p>
    </div>
    <div class="mt-4 flex md:mt-0 md:ml-4">
      <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" onclick="openNewPostModal()">
        새 게시글
      </button>
    </div>
  </div>

  <!-- 부서별 필터 및 카테고리 -->
  <div class="mt-6">
    <!-- 부서 탭 -->
    <div class="border-b border-gray-200">
      <nav class="-mb-px flex space-x-8">
        <a href="#" class="border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="">
          전체
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="의료진">
          의료진
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="간호부">
          간호부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="행정부">
          행정부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="시설관리">
          시설관리
        </a>
      </nav>
    </div>
    
    <!-- 카테고리 필터 -->
    <div class="mt-4">
      <div class="flex flex-wrap gap-2">
        <button class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-full text-white bg-blue-600 hover:bg-blue-700" data-category="">
          전체
        </button>
        <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50" data-category="work_share">
          업무공유
        </button>
        <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50" data-category="qna">
          질문답변
        </button>
        <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50" data-category="notice">
          부서공지
        </button>
        <button class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50" data-category="suggestion">
          건의사항
        </button>
      </div>
    </div>
  </div>

  <!-- 게시글 목록 -->
  <div class="mt-8">
    <div class="bg-white shadow overflow-hidden sm:rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <div class="divide-y divide-gray-200" id="posts-list">
          <!-- 게시글 항목들이 여기 동적으로 로드됩니다 -->
          <div class="py-4">
            <div class="flex items-center justify-center">
              <div class="text-sm text-gray-500">게시글을 불러오는 중...</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 새 게시글 모달 -->
<div id="new-post-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">새 게시글 작성</h3>
        <button type="button" class="text-gray-400 hover:text-gray-600" onclick="closeNewPostModal()">
          <span class="sr-only">닫기</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="new-post-form" class="space-y-4">
        <div>
          <label for="title" class="block text-sm font-medium text-gray-700">제목</label>
          <input type="text" id="title" name="title" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        
        <div class="grid grid-cols-2 gap-4">
          <div>
            <label for="department" class="block text-sm font-medium text-gray-700">부서</label>
            <select id="department" name="department" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">부서 선택</option>
              <option value="의료진">의료진</option>
              <option value="간호부">간호부</option>
              <option value="행정부">행정부</option>
              <option value="시설관리">시설관리</option>
            </select>
          </div>
          
          <div>
            <label for="category" class="block text-sm font-medium text-gray-700">카테고리</label>
            <select id="category" name="category" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">카테고리 선택</option>
              <option value="work_share">업무공유</option>
              <option value="qna">질문답변</option>
              <option value="notice">부서공지</option>
              <option value="suggestion">건의사항</option>
            </select>
          </div>
        </div>
        
        <div>
          <label for="priority" class="block text-sm font-medium text-gray-700">우선순위</label>
          <select id="priority" name="priority" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="normal">일반</option>
            <option value="important">중요</option>
            <option value="reference">참고</option>
          </select>
        </div>
        
        <div>
          <label for="content" class="block text-sm font-medium text-gray-700">내용</label>
          <textarea id="content" name="content" rows="6" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea>
        </div>
        
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input id="is_public" name="is_public" type="checkbox" checked class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
            <label for="is_public" class="ml-2 block text-sm text-gray-900">
              전체 공개
            </label>
          </div>
          <div class="flex space-x-3">
            <button type="button" onclick="closeNewPostModal()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              취소
            </button>
            <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              등록
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
// 게시글 목록 로드
let currentDepartment = '';
let currentCategory = '';

async function loadPosts(department = '', category = '') {
  const token = localStorage.getItem('auth_token');
  if (!token) {
    window.location.href = '/login';
    return;
  }
  
  try {
    let url = 'http://localhost:7001/api/v1/department_posts';
    const params = new URLSearchParams();
    if (department) params.append('department', department);
    if (category) params.append('category', category);
    if (params.toString()) url += '?' + params.toString();
      
    const response = await fetch(url, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      displayPosts(data.data);
    } else {
      document.getElementById('posts-list').innerHTML = 
        '<div class="py-4"><div class="text-center text-sm text-red-600">게시글을 불러올 수 없습니다.</div></div>';
    }
  } catch (error) {
    document.getElementById('posts-list').innerHTML = 
      '<div class="py-4"><div class="text-center text-sm text-red-600">API 연결 실패</div></div>';
  }
}

function displayPosts(posts) {
  const listElement = document.getElementById('posts-list');
  
  if (posts.length === 0) {
    listElement.innerHTML = '<div class="py-4"><div class="text-center text-sm text-gray-500">게시글이 없습니다.</div></div>';
    return;
  }
  
  listElement.innerHTML = posts.map(post => `
    <div class="py-4 hover:bg-gray-50 cursor-pointer" onclick="viewPost(${post.id})">
      <div class="flex items-start justify-between">
        <div class="flex-1">
          <div class="flex items-center mb-2">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${post.priority_color} mr-2">
              ${post.priority_text}
            </span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-green-800 bg-green-100 mr-2">
              ${post.category_text}
            </span>
            <span class="text-xs text-gray-500">${post.department}</span>
          </div>
          <h3 class="text-sm font-semibold text-gray-900 mb-1">
            ${post.title}
          </h3>
          <p class="text-sm text-gray-600 mb-2 line-clamp-2">
            ${post.content}
          </p>
          <div class="flex items-center text-xs text-gray-500 space-x-4">
            <span>👤 ${post.author}</span>
            <span>👁 ${post.views_count}</span>
            <span>💬 ${post.comments_count}</span>
            <span>📅 ${new Date(post.created_at).toLocaleDateString('ko-KR')}</span>
          </div>
        </div>
        <div class="ml-4 flex-shrink-0">
          <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
    </div>
  `).join('');
}

function viewPost(id) {
  window.location.href = `/boards/${id}`;
}

// 부서별 필터 기능
document.querySelectorAll('[data-department]').forEach(link => {
  link.addEventListener('click', function(e) {
    e.preventDefault();
    
    // 활성 탭 업데이트
    document.querySelectorAll('[data-department]').forEach(l => {
      l.className = 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    });
    this.className = 'border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    
    currentDepartment = this.dataset.department;
    loadPosts(currentDepartment, currentCategory);
  });
});

// 카테고리별 필터 기능
document.querySelectorAll('[data-category]').forEach(button => {
  button.addEventListener('click', function(e) {
    e.preventDefault();
    
    // 활성 버튼 업데이트
    document.querySelectorAll('[data-category]').forEach(b => {
      b.className = 'inline-flex items-center px-3 py-1.5 border border-gray-300 text-xs font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50';
    });
    this.className = 'inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-full text-white bg-blue-600 hover:bg-blue-700';
    
    currentCategory = this.dataset.category;
    loadPosts(currentDepartment, currentCategory);
  });
});

// 모달 관리
function openNewPostModal() {
  document.getElementById('new-post-modal').classList.remove('hidden');
}

function closeNewPostModal() {
  document.getElementById('new-post-modal').classList.add('hidden');
  document.getElementById('new-post-form').reset();
}

// 새 게시글 등록
document.getElementById('new-post-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const token = localStorage.getItem('auth_token');
  const formData = new FormData(e.target);
  
  const postData = {
    title: formData.get('title'),
    content: formData.get('content'),
    department: formData.get('department'),
    category: formData.get('category'),
    priority: formData.get('priority'),
    is_public: formData.get('is_public') === 'on'
  };
  
  try {
    const response = await fetch('http://localhost:7001/api/v1/department_posts', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ department_post: postData })
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      closeNewPostModal();
      loadPosts(currentDepartment, currentCategory);
      alert('게시글이 성공적으로 등록되었습니다.');
    } else {
      alert('등록 실패: ' + (data.message || '알 수 없는 오류'));
    }
  } catch (error) {
    alert('API 연결 실패');
  }
});

// 페이지 로드 시 게시글 목록 로드
document.addEventListener('DOMContentLoaded', () => {
  loadPosts();
});
</script>
