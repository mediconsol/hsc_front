<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- 대시보드 헤더 -->
  <div class="md:flex md:items-center md:justify-between">
    <div class="flex-1 min-w-0">
      <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
        병원 관리 대시보드
      </h2>
      <p class="mt-1 text-sm text-gray-500">
        오늘의 병원 운영 현황을 한눈에 확인하세요
      </p>
    </div>
    <div class="mt-4 flex md:mt-0 md:ml-4">
      <!-- 사용자 정보 및 로그아웃 -->
      <div class="flex items-center space-x-4">
        <div class="text-sm">
          <span class="text-gray-600">안녕하세요, </span>
          <span id="user-name" class="font-medium text-gray-900">사용자</span>님
          <span class="text-gray-500">(<span id="user-role" class="capitalize">admin</span>)</span>
        </div>
        <button 
          id="logout-btn"
          class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors"
        >
          로그아웃
        </button>
      </div>
    </div>
  </div>

  <!-- 주요 통계 카드 -->
  <div class="mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
    <!-- 오늘 예약 -->
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
              <span class="text-white text-sm font-bold">📅</span>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">
                오늘 예약
              </dt>
              <dd class="text-lg font-medium text-gray-900">
                24건
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <!-- 대기 환자 -->
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center">
              <span class="text-white text-sm font-bold">⏰</span>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">
                대기 환자
              </dt>
              <dd class="text-lg font-medium text-gray-900">
                8명
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <!-- 진료 완료 -->
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
              <span class="text-white text-sm font-bold">✅</span>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">
                진료 완료
              </dt>
              <dd class="text-lg font-medium text-gray-900">
                16건
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <!-- 입원 환자 -->
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-red-500 rounded-full flex items-center justify-center">
              <span class="text-white text-sm font-bold">🏥</span>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">
                입원 환자
              </dt>
              <dd class="text-lg font-medium text-gray-900">
                32명
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- 주요 기능 메뉴 -->
  <div class="mt-8">
    <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">주요 기능</h3>
    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
      <!-- 예약 관리 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">📋</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">예약 관리</h4>
              <p class="text-sm text-gray-500">환자 예약 현황 및 일정 관리</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 환자 관리 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">👥</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">환자 관리</h4>
              <p class="text-sm text-gray-500">환자 정보 및 진료 이력 관리</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 진료 관리 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">🩺</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">진료 관리</h4>
              <p class="text-sm text-gray-500">진료 기록 및 처방전 관리</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 인사 관리 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">👨‍⚕️</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">인사 관리</h4>
              <p class="text-sm text-gray-500">직원 정보 및 근무 일정 관리</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 재고 관리 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">📦</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">재고 관리</h4>
              <p class="text-sm text-gray-500">의료용품 및 약품 재고 관리</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 통계 분석 -->
      <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow cursor-pointer">
        <div class="p-6">
          <div class="flex items-center">
            <div class="text-2xl mr-3">📊</div>
            <div>
              <h4 class="text-lg font-medium text-gray-900">통계 분석</h4>
              <p class="text-sm text-gray-500">병원 운영 데이터 및 분석</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- API 연동 상태 -->
  <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
    <div class="flex items-center">
      <div class="text-blue-500 mr-2">🔗</div>
      <div>
        <h4 class="text-sm font-medium text-blue-800">API 연동 상태</h4>
        <p class="text-sm text-blue-600">백엔드 API 서버: <span id="api-status" class="font-mono">확인 중...</span></p>
      </div>
    </div>
  </div>
</div>

<script>
// 페이지 로드 시 인증 체크
(function() {
  const token = localStorage.getItem('auth_token');
  
  if (!token) {
    // 토큰이 없으면 로그인 페이지로 리다이렉트
    window.location.href = '/login';
    return;
  }
  
  // 환경에 따른 백엔드 URL 설정
  const apiBaseUrl = window.location.hostname.includes('railway.app')
    ? 'https://hsc1-production.up.railway.app'
    : 'http://localhost:7001';
  
  // 토큰 유효성 검증
  fetch(`${apiBaseUrl}/api/v1/auth/me`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Token validation failed');
    }
    return response.json();
  })
  .then(data => {
    if (data.status !== 'success') {
      throw new Error('Invalid token response');
    }
    // 토큰이 유효하면 사용자 정보 업데이트
    localStorage.setItem('user_info', JSON.stringify(data.user));
  })
  .catch(error => {
    // 토큰이 유효하지 않으면 제거하고 로그인 페이지로 리다이렉트
    localStorage.removeItem('auth_token');
    localStorage.removeItem('refresh_token');
    localStorage.removeItem('user_info');
    window.location.href = '/login';
  });
})();

// 페이지 로드 시 사용자 정보 표시
(function() {
  const userInfo = localStorage.getItem('user_info');
  
  if (userInfo) {
    try {
      const user = JSON.parse(userInfo);
      document.getElementById('user-name').textContent = user.name || '사용자';
      
      // 역할 이름 매핑
      const roleNames = {
        0: 'read_only',
        1: 'staff', 
        2: 'manager',
        3: 'admin'
      };
      
      const roleKorean = {
        'read_only': '읽기전용',
        'staff': '직원',
        'manager': '관리자', 
        'admin': '시스템관리자'
      };
      
      const roleName = roleNames[user.role] || 'staff';
      document.getElementById('user-role').textContent = roleKorean[roleName] || roleName;
    } catch (error) {
      console.error('사용자 정보 파싱 오류:', error);
    }
  }
})();

// 로그아웃 기능
document.getElementById('logout-btn').addEventListener('click', async () => {
  const token = localStorage.getItem('auth_token');
  
  try {
    // 환경에 따른 백엔드 URL 설정
    const apiBaseUrl = window.location.hostname.includes('railway.app')
      ? 'https://hsc1-production.up.railway.app'
      : 'http://localhost:7001';
    
    // 백엔드 로그아웃 API 호출
    await fetch(`${apiBaseUrl}/api/v1/auth/logout`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
  } catch (error) {
    console.error('로그아웃 API 호출 오류:', error);
  } finally {
    // 로컬 저장소에서 인증 정보 제거
    localStorage.removeItem('auth_token');
    localStorage.removeItem('refresh_token');
    localStorage.removeItem('user_info');
    
    // 로그인 페이지로 리다이렉트
    window.location.href = '/login';
  }
});

// API 상태 확인
// 환경에 따른 백엔드 URL 설정
const statusApiUrl = window.location.hostname.includes('railway.app')
  ? 'https://hsc1-production.up.railway.app'
  : 'http://localhost:7001';

fetch(`${statusApiUrl}/`)
  .then(response => response.json())
  .then(data => {
    document.getElementById('api-status').textContent = '연결됨 ✅';
    document.getElementById('api-status').className += ' text-green-600';
  })
  .catch(error => {
    document.getElementById('api-status').textContent = '연결 실패 ❌';
    document.getElementById('api-status').className += ' text-red-600';
  });
</script>