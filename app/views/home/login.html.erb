<div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <!-- 로그인 카드 -->
    <div class="bg-white rounded-xl shadow-xl p-8">
      <div class="text-center">
        <div class="mx-auto h-16 w-16 flex items-center justify-center rounded-full bg-blue-100 mb-6">
          <span class="text-3xl">🏥</span>
        </div>
        <h2 class="text-3xl font-extrabold text-gray-900 mb-2">
          병원 관리 시스템
        </h2>
        <p class="text-sm text-gray-600 mb-8">
          관리자 계정으로 로그인하세요
        </p>
      </div>
      
      <form class="space-y-6" id="login-form">
        <div class="space-y-4">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">이메일</label>
            <input 
              id="email" 
              name="email" 
              type="email" 
              required 
              class="w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
              placeholder="이메일 주소를 입력하세요"
              value="admin@hospital.com"
            >
          </div>
          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-1">비밀번호</label>
            <input 
              id="password" 
              name="password" 
              type="password" 
              required 
              class="w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
              placeholder="비밀번호를 입력하세요"
              value="password123"
            >
          </div>
        </div>

        <div class="bg-blue-50 rounded-lg p-4">
          <p class="text-sm text-blue-700 text-center">
            <span class="font-medium">테스트 계정</span><br>
            admin@hospital.com / password123
          </p>
        </div>

        <div>
          <button 
            type="submit" 
            class="w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
          >
            로그인하기
          </button>
        </div>
        
        <div id="login-status" class="text-center text-sm"></div>
      </form>
    </div>
  </div>
</div>

<script>
// 페이지 로드 시 이미 로그인된 상태인지 확인
(function() {
  const token = localStorage.getItem('auth_token');
  
  if (token) {
    // 토큰이 있으면 유효성 검증 후 리다이렉트
    fetch('http://localhost:7001/api/v1/auth/me', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 'success') {
        // 이미 로그인된 상태이면 대시보드로 리다이렉트
        window.location.href = '/dashboard';
      }
    })
    .catch(error => {
      // 토큰이 유효하지 않으면 제거
      localStorage.removeItem('auth_token');
      localStorage.removeItem('refresh_token');
      localStorage.removeItem('user_info');
    });
  }
})();

document.getElementById('login-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const email = document.getElementById('email').value;
  const password = document.getElementById('password').value;
  const statusDiv = document.getElementById('login-status');
  
  statusDiv.textContent = '로그인 중...';
  statusDiv.className = 'text-center text-sm text-blue-600';
  
  try {
    const response = await fetch('http://localhost:7001/api/v1/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ email, password })
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      statusDiv.textContent = '로그인 성공! 대시보드로 이동합니다...';
      statusDiv.className = 'text-center text-sm text-green-600';
      
      // JWT 토큰 저장 (백엔드 응답 구조에 맞게 수정)
      localStorage.setItem('auth_token', data.access_token);
      localStorage.setItem('refresh_token', data.refresh_token);
      localStorage.setItem('user_info', JSON.stringify(data.user));
      
      // 1.5초 후 대시보드로 이동
      setTimeout(() => {
        window.location.href = '/dashboard';
      }, 1500);
    } else {
      statusDiv.textContent = '로그인 실패: ' + (data.message || '알 수 없는 오류');
      statusDiv.className = 'text-center text-sm text-red-600';
    }
  } catch (error) {
    statusDiv.textContent = 'API 연결 실패. 백엔드 서버가 실행 중인지 확인하세요.';
    statusDiv.className = 'text-center text-sm text-red-600';
  }
});
</script>