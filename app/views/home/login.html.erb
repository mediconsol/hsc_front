<div class="login-container">
  <div class="login-card">
    <div style="text-align: center;">
      <div class="hospital-icon">
        <span>🏥</span>
      </div>
      <h2 style="font-size: 1.875rem; font-weight: 800; color: #111827; margin-bottom: 0.5rem;">
        병원 관리 시스템
      </h2>
      <p style="font-size: 0.875rem; color: #6b7280; margin-bottom: 2rem;">
        관리자 계정으로 로그인하세요
      </p>
    </div>
      
      <form id="login-form">
        <div>
          <label for="email" style="display: block; font-size: 0.875rem; font-weight: 500; color: #374151; margin-bottom: 0.25rem;">이메일</label>
          <input 
            id="email" 
            name="email" 
            type="email" 
            required 
            class="form-input" 
            placeholder="이메일 주소를 입력하세요"
            value="admin@mediconsol.com"
          >
        </div>
        <div>
          <label for="password" style="display: block; font-size: 0.875rem; font-weight: 500; color: #374151; margin-bottom: 0.25rem;">비밀번호</label>
          <input 
            id="password" 
            name="password" 
            type="password" 
            required 
            class="form-input" 
            placeholder="비밀번호를 입력하세요"
            value="test1234"
          >
        </div>

        <div class="test-account" style="text-align: left;">
          <p style="font-size: 0.875rem; font-weight: 500; margin-bottom: 0.5rem;">테스트 계정 목록:</p>
          <div style="font-size: 0.75rem; line-height: 1.5;">
            <div style="margin-bottom: 0.25rem;"><strong>관리자:</strong> admin@hospital.com / password123</div>
            <div style="margin-bottom: 0.25rem;"><strong>시스템관리자:</strong> admin@mediconsol.com / test1234</div>
            <div style="margin-bottom: 0.25rem;"><strong>매니저:</strong> manager@hospital.com / password123</div>
            <div style="margin-bottom: 0.25rem;"><strong>직원:</strong> staff@hospital.com / password123</div>
          </div>
        </div>

        <div>
          <button 
            type="submit" 
            class="login-button"
          >
            로그인하기
          </button>
        </div>
        
        <div id="login-status" style="text-align: center; font-size: 0.875rem; margin-top: 1rem;"></div>
      </form>
    </div>
  </div>
</div>

<script>
// 페이지 로드 시 이미 로그인된 상태인지 확인
(function() {
  const token = localStorage.getItem('auth_token');
  
  if (token) {
    // 토큰이 있으면 유효성 검증 후 리다이렉트
    fetch('https://hsc1-production.up.railway.app/api/v1/auth/me', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 'success') {
        // 이미 로그인된 상태이면 대시보드로 리다이렉트
        window.location.href = '/dashboard';
      }
    })
    .catch(error => {
      // 토큰이 유효하지 않으면 제거
      localStorage.removeItem('auth_token');
      localStorage.removeItem('refresh_token');
      localStorage.removeItem('user_info');
    });
  }
})();

document.getElementById('login-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const email = document.getElementById('email').value;
  const password = document.getElementById('password').value;
  const statusDiv = document.getElementById('login-status');
  
  statusDiv.textContent = '로그인 중...';
  statusDiv.className = 'text-center text-sm text-blue-600';
  
  try {
    const response = await fetch('https://hsc1-production.up.railway.app/api/v1/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ email, password })
    });
    
    console.log('Response status:', response.status);
    const data = await response.json();
    console.log('Response data:', data);
    
    if (data.status === 'success') {
      statusDiv.textContent = '로그인 성공! 대시보드로 이동합니다...';
      statusDiv.className = 'text-center text-sm text-green-600';
      
      // JWT 토큰 저장 (백엔드 응답 구조에 맞게 수정)
      localStorage.setItem('auth_token', data.access_token);
      localStorage.setItem('refresh_token', data.refresh_token);
      localStorage.setItem('user_info', JSON.stringify(data.user));
      
      // 1.5초 후 대시보드로 이동
      setTimeout(() => {
        window.location.href = '/dashboard';
      }, 1500);
    } else {
      statusDiv.textContent = '로그인 실패: ' + (data.message || '알 수 없는 오류');
      statusDiv.className = 'text-center text-sm text-red-600';
    }
  } catch (error) {
    statusDiv.textContent = 'API 연결 실패. 백엔드 서버가 실행 중인지 확인하세요.';
    statusDiv.className = 'text-center text-sm text-red-600';
  }
});
</script>