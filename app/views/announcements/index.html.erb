<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- 페이지 헤더 -->
  <div class="md:flex md:items-center md:justify-between">
    <div class="flex-1 min-w-0">
      <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
        📢 공지사항
      </h2>
      <p class="mt-1 text-sm text-gray-500">
        병원 공지사항을 확인하세요
      </p>
    </div>
    <div class="mt-4 flex md:mt-0 md:ml-4">
      <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" onclick="openNewAnnouncementModal()">
        새 공지사항
      </button>
    </div>
  </div>

  <!-- 부서별 필터 -->
  <div class="mt-6">
    <div class="sm:hidden">
      <label for="department-select" class="sr-only">부서 선택</label>
      <select id="department-select" name="department" class="block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md">
        <option value="">전체 부서</option>
        <option value="전체">전체</option>
        <option value="의료진">의료진</option>
        <option value="간호부">간호부</option>
        <option value="행정부">행정부</option>
        <option value="시설관리">시설관리</option>
      </select>
    </div>
    <div class="hidden sm:block">
      <nav class="flex space-x-8">
        <a href="#" class="border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="">
          전체
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="의료진">
          의료진
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="간호부">
          간호부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="행정부">
          행정부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="시설관리">
          시설관리
        </a>
      </nav>
    </div>
  </div>

  <!-- 공지사항 목록 -->
  <div class="mt-8">
    <div class="bg-white shadow overflow-hidden sm:rounded-md">
      <ul id="announcements-list" class="divide-y divide-gray-200">
        <!-- 공지사항 항목들이 여기 동적으로 로드됩니다 -->
        <li class="px-6 py-4">
          <div class="flex items-center justify-center">
            <div class="text-sm text-gray-500">공지사항을 불러오는 중...</div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>

<!-- 새 공지사항 모달 -->
<div id="new-announcement-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">새 공지사항 작성</h3>
        <button type="button" class="text-gray-400 hover:text-gray-600" onclick="closeNewAnnouncementModal()">
          <span class="sr-only">닫기</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="new-announcement-form" class="space-y-4">
        <div>
          <label for="title" class="block text-sm font-medium text-gray-700">제목</label>
          <input type="text" id="title" name="title" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        
        <div>
          <label for="department" class="block text-sm font-medium text-gray-700">대상 부서</label>
          <select id="department" name="department" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="">부서 선택</option>
            <option value="전체">전체</option>
            <option value="의료진">의료진</option>
            <option value="간호부">간호부</option>
            <option value="행정부">행정부</option>
            <option value="시설관리">시설관리</option>
          </select>
        </div>
        
        <div>
          <label for="priority" class="block text-sm font-medium text-gray-700">우선순위</label>
          <select id="priority" name="priority" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="3">일반</option>
            <option value="2">중요</option>
            <option value="1">긴급</option>
          </select>
        </div>
        
        <div>
          <label for="content" class="block text-sm font-medium text-gray-700">내용</label>
          <textarea id="content" name="content" rows="6" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea>
        </div>
        
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input id="is_published" name="is_published" type="checkbox" checked class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
            <label for="is_published" class="ml-2 block text-sm text-gray-900">
              즉시 게시
            </label>
          </div>
          <div class="flex space-x-3">
            <button type="button" onclick="closeNewAnnouncementModal()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              취소
            </button>
            <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              등록
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
// 공지사항 목록 로드
let currentDepartment = '';

async function loadAnnouncements(department = '') {
  const token = localStorage.getItem('auth_token');
  if (!token) {
    window.location.href = '/login';
    return;
  }
  
  try {
    const url = department ? 
      `http://localhost:7001/api/v1/announcements?department=${department}` : 
      'http://localhost:7001/api/v1/announcements';
      
    const response = await fetch(url, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      displayAnnouncements(data.data);
    } else {
      document.getElementById('announcements-list').innerHTML = 
        '<li class="px-6 py-4"><div class="text-center text-sm text-red-600">공지사항을 불러올 수 없습니다.</div></li>';
    }
  } catch (error) {
    document.getElementById('announcements-list').innerHTML = 
      '<li class="px-6 py-4"><div class="text-center text-sm text-red-600">API 연결 실패</div></li>';
  }
}

function displayAnnouncements(announcements) {
  const listElement = document.getElementById('announcements-list');
  
  if (announcements.length === 0) {
    listElement.innerHTML = '<li class="px-6 py-4"><div class="text-center text-sm text-gray-500">공지사항이 없습니다.</div></li>';
    return;
  }
  
  listElement.innerHTML = announcements.map(announcement => `
    <li class="px-6 py-4 hover:bg-gray-50 cursor-pointer" onclick="viewAnnouncement(${announcement.id})">
      <div class="flex items-center justify-between">
        <div class="flex-1">
          <div class="flex items-center">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${announcement.priority_color} mr-3">
              ${announcement.priority_text}
            </span>
            <p class="text-sm font-medium text-gray-900 truncate">
              ${announcement.title}
            </p>
          </div>
          <div class="mt-2 flex items-center text-sm text-gray-500">
            <span class="mr-4">${announcement.department}</span>
            <span class="mr-4">${announcement.author}</span>
            <span>${new Date(announcement.published_at).toLocaleDateString('ko-KR')}</span>
          </div>
        </div>
        <div class="ml-2 flex-shrink-0">
          <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
    </li>
  `).join('');
}

function viewAnnouncement(id) {
  window.location.href = `/announcements/${id}`;
}

// 부서별 필터 기능
document.querySelectorAll('[data-department]').forEach(link => {
  link.addEventListener('click', function(e) {
    e.preventDefault();
    
    // 활성 탭 업데이트
    document.querySelectorAll('[data-department]').forEach(l => {
      l.className = 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    });
    this.className = 'border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    
    currentDepartment = this.dataset.department;
    loadAnnouncements(currentDepartment);
  });
});

// 모달 관리
function openNewAnnouncementModal() {
  document.getElementById('new-announcement-modal').classList.remove('hidden');
}

function closeNewAnnouncementModal() {
  document.getElementById('new-announcement-modal').classList.add('hidden');
  document.getElementById('new-announcement-form').reset();
}

// 새 공지사항 등록
document.getElementById('new-announcement-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const token = localStorage.getItem('auth_token');
  const formData = new FormData(e.target);
  
  const announcementData = {
    title: formData.get('title'),
    content: formData.get('content'),
    department: formData.get('department'),
    priority: parseInt(formData.get('priority')),
    is_published: formData.get('is_published') === 'on'
  };
  
  try {
    const response = await fetch('http://localhost:7001/api/v1/announcements', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ announcement: announcementData })
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      closeNewAnnouncementModal();
      loadAnnouncements(currentDepartment);
      alert('공지사항이 성공적으로 등록되었습니다.');
    } else {
      alert('등록 실패: ' + (data.message || '알 수 없는 오류'));
    }
  } catch (error) {
    alert('API 연결 실패');
  }
});

// 페이지 로드 시 공지사항 목록 로드
document.addEventListener('DOMContentLoaded', () => {
  loadAnnouncements();
});
</script>
