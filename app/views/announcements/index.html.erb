<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- 페이지 헤더 -->
  <div class="md:flex md:items-center md:justify-between">
    <div class="flex-1 min-w-0">
      <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
        📢 공지사항
      </h2>
      <p class="mt-1 text-sm text-gray-500">
        병원 공지사항을 확인하세요
      </p>
    </div>
    <div class="mt-4 flex md:mt-0 md:ml-4">
      <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" onclick="openNewAnnouncementModal()">
        새 공지사항
      </button>
    </div>
  </div>

  <!-- 통계 정보 -->
  <div class="mt-6 mb-4">
    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="flex items-center">
          <div class="p-2 bg-blue-100 rounded-full">
            <svg class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z"/>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7H4a2 2 0 00-2 2v9a2 2 0 002 2h9a2 2 0 002-2V9a2 2 0 00-2-2H9z"/>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-900">전체 공지사항</h3>
            <p id="total-count" class="text-2xl font-bold text-gray-900">-</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="flex items-center">
          <div class="p-2 bg-red-100 rounded-full">
            <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-900">미읽음</h3>
            <p id="unread-count" class="text-2xl font-bold text-red-600">-</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white p-4 rounded-lg shadow">
        <div class="flex items-center">
          <div class="p-2 bg-green-100 rounded-full">
            <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-sm font-medium text-gray-900">고정된 공지</h3>
            <p id="pinned-count" class="text-2xl font-bold text-green-600">-</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- 검색 및 필터 섹션 -->
  <div class="mt-6">
    <!-- 검색 바 -->
    <div class="mb-6">
      <div class="max-w-2xl">
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </div>
          <input id="search-input" type="text" placeholder="공지사항 제목이나 내용을 검색하세요..." class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
          <div id="search-loading" class="absolute inset-y-0 right-0 pr-3 flex items-center hidden">
            <svg class="animate-spin h-5 w-5 text-blue-500" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- 고급 필터 -->
    <div class="mb-6 bg-gray-50 p-4 rounded-lg">
      <div class="flex flex-wrap items-center space-x-4 space-y-2">
        <!-- 날짜 범위 필터 -->
        <div class="flex items-center space-x-2">
          <label class="text-sm font-medium text-gray-700">기간:</label>
          <input type="date" id="start-date" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
          <span class="text-gray-500">~</span>
          <input type="date" id="end-date" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
        </div>

        <!-- 우선순위 필터 -->
        <div class="flex items-center space-x-2">
          <label class="text-sm font-medium text-gray-700">우선순위:</label>
          <select id="priority-filter" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            <option value="">전체</option>
            <option value="1">긴급</option>
            <option value="2">중요</option>
            <option value="3">일반</option>
          </select>
        </div>

        <!-- 읽음 상태 필터 -->
        <div class="flex items-center space-x-2">
          <label class="text-sm font-medium text-gray-700">읽음상태:</label>
          <select id="read-status-filter" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            <option value="">전체</option>
            <option value="unread">미읽음</option>
            <option value="read">읽음</option>
          </select>
        </div>

        <!-- 정렬 옵션 -->
        <div class="flex items-center space-x-2">
          <label class="text-sm font-medium text-gray-700">정렬:</label>
          <select id="sort-option" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            <option value="latest">최신순</option>
            <option value="priority">우선순위순</option>
            <option value="views">조회수순</option>
          </select>
        </div>

        <!-- 필터 초기화 버튼 -->
        <button onclick="clearFilters()" class="text-sm px-3 py-1 text-gray-600 hover:text-gray-800 hover:bg-gray-200 rounded-md">
          필터 초기화
        </button>
      </div>
    </div>

    <!-- 부서별 필터 (기존 유지) -->
    <div class="sm:hidden">
      <label for="department-select" class="sr-only">부서 선택</label>
      <select id="department-select" name="department" class="block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md">
        <option value="">전체 부서</option>
        <option value="전체">전체</option>
        <option value="의료진">의료진</option>
        <option value="간호부">간호부</option>
        <option value="행정부">행정부</option>
        <option value="시설관리">시설관리</option>
      </select>
    </div>
    <div class="hidden sm:block">
      <nav class="flex space-x-8">
        <a href="#" class="border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="">
          전체
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="의료진">
          의료진
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="간호부">
          간호부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="행정부">
          행정부
        </a>
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-department="시설관리">
          시설관리
        </a>
      </nav>
    </div>

    <!-- 검색 결과 요약 -->
    <div id="search-summary" class="mt-4 text-sm text-gray-600 hidden">
      <!-- JavaScript로 동적 설정 -->
    </div>
  </div>

  <!-- 공지사항 목록 -->
  <div class="mt-8">
    <div class="bg-white shadow overflow-hidden sm:rounded-md">
      <ul id="announcements-list" class="divide-y divide-gray-200">
        <!-- 공지사항 항목들이 여기 동적으로 로드됩니다 -->
        <li class="px-6 py-4">
          <div class="flex items-center justify-center">
            <div class="text-sm text-gray-500">공지사항을 불러오는 중...</div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>

<!-- 새 공지사항 모달 -->
<div id="new-announcement-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">새 공지사항 작성</h3>
        <button type="button" class="text-gray-400 hover:text-gray-600" onclick="closeNewAnnouncementModal()">
          <span class="sr-only">닫기</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="new-announcement-form" class="space-y-4">
        <div>
          <label for="title" class="block text-sm font-medium text-gray-700">제목</label>
          <input type="text" id="title" name="title" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        
        <div>
          <label for="department" class="block text-sm font-medium text-gray-700">대상 부서</label>
          <select id="department" name="department" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="">부서 선택</option>
            <option value="전체">전체</option>
            <option value="의료진">의료진</option>
            <option value="간호부">간호부</option>
            <option value="행정부">행정부</option>
            <option value="시설관리">시설관리</option>
          </select>
        </div>
        
        <div>
          <label for="priority" class="block text-sm font-medium text-gray-700">우선순위</label>
          <select id="priority" name="priority" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            <option value="3">일반</option>
            <option value="2">중요</option>
            <option value="1">긴급</option>
          </select>
        </div>
        
        <div>
          <label for="content" class="block text-sm font-medium text-gray-700">내용</label>
          <textarea id="content" name="content" rows="6" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea>
        </div>
        
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input id="is_published" name="is_published" type="checkbox" checked class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
            <label for="is_published" class="ml-2 block text-sm text-gray-900">
              즉시 게시
            </label>
          </div>
          <div class="flex space-x-3">
            <button type="button" onclick="closeNewAnnouncementModal()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              취소
            </button>
            <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              등록
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
// 전역 변수들
let currentDepartment = '';
let searchTimeout = null;
let currentPage = 1;
let isLoading = false;

// 공지사항 목록 로드 (검색 및 필터링 포함)
async function loadAnnouncements(options = {}) {
  const token = localStorage.getItem('auth_token');
  if (!token) {
    window.location.href = '/login';
    return;
  }
  
  // 로딩 상태 표시
  showSearchLoading();
  isLoading = true;
  
  try {
    // URL 파라미터 구성
    const params = new URLSearchParams();
    
    // 기존 부서 필터
    if (currentDepartment || options.department) {
      params.append('department', options.department || currentDepartment);
    }
    
    // 새로운 검색 및 필터 파라미터들
    if (options.search) params.append('search', options.search);
    if (options.startDate) params.append('start_date', options.startDate);
    if (options.endDate) params.append('end_date', options.endDate);
    if (options.priority) params.append('priority', options.priority);
    if (options.readStatus) params.append('read_status', options.readStatus);
    if (options.sort) params.append('sort', options.sort);
    if (options.page) params.append('page', options.page);
    
    const url = `http://localhost:7001/api/v1/announcements?${params.toString()}`;
    
    const response = await fetch(url, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      displayAnnouncements(data.data);
      updateSearchSummary(data.data, data.pagination, {
        unread_count: data.unread_count,
        pinned_count: data.pinned_count
      });
    } else {
      document.getElementById('announcements-list').innerHTML = 
        '<li class="px-6 py-4"><div class="text-center text-sm text-red-600">공지사항을 불러올 수 없습니다.</div></li>';
    }
  } catch (error) {
    console.error('공지사항 로드 오류:', error);
    document.getElementById('announcements-list').innerHTML = 
      '<li class="px-6 py-4"><div class="text-center text-sm text-red-600">API 연결 실패</div></li>';
  } finally {
    hideSearchLoading();
    isLoading = false;
  }
}

// 검색 결과 요약 및 통계 업데이트
function updateSearchSummary(announcements, pagination, stats) {
  const summaryElement = document.getElementById('search-summary');
  
  // 통계 정보 업데이트
  if (stats) {
    document.getElementById('total-count').textContent = announcements.length;
    document.getElementById('unread-count').textContent = stats.unread_count || 0;
    document.getElementById('pinned-count').textContent = stats.pinned_count || 0;
  }
  
  // 검색 조건들 수집
  const conditions = [];
  const searchTerm = document.getElementById('search-input').value.trim();
  const startDate = document.getElementById('start-date').value;
  const endDate = document.getElementById('end-date').value;
  const priority = document.getElementById('priority-filter').value;
  const readStatus = document.getElementById('read-status-filter').value;
  
  if (searchTerm) conditions.push(`검색어: "${searchTerm}"`);
  if (startDate && endDate) conditions.push(`기간: ${startDate} ~ ${endDate}`);
  else if (startDate) conditions.push(`시작일: ${startDate}`);
  else if (endDate) conditions.push(`종료일: ${endDate}`);
  if (priority) {
    const priorityText = priority === '1' ? '긴급' : priority === '2' ? '중요' : '일반';
    conditions.push(`우선순위: ${priorityText}`);
  }
  if (readStatus) {
    const readStatusText = readStatus === 'unread' ? '미읽음' : '읽음';
    conditions.push(`읽음상태: ${readStatusText}`);
  }
  if (currentDepartment) conditions.push(`부서: ${currentDepartment}`);
  
  if (conditions.length > 0 || announcements.length > 0) {
    const conditionsText = conditions.length > 0 ? conditions.join(', ') + '에 대한 ' : '';
    summaryElement.innerHTML = `${conditionsText}검색 결과: <strong>${announcements.length}개</strong>`;
    summaryElement.classList.remove('hidden');
  } else {
    summaryElement.classList.add('hidden');
  }
}

function displayAnnouncements(announcements) {
  const listElement = document.getElementById('announcements-list');
  
  if (announcements.length === 0) {
    listElement.innerHTML = '<li class="px-6 py-4"><div class="text-center text-sm text-gray-500">검색 조건에 맞는 공지사항이 없습니다.</div></li>';
    return;
  }
  
  listElement.innerHTML = announcements.map(announcement => {
    const isUnread = !announcement.is_read;
    const isPinned = announcement.is_pinned;
    
    return `
    <li class="px-6 py-4 hover:bg-gray-50 cursor-pointer transition-colors duration-150 ${isUnread ? 'bg-blue-50 border-l-4 border-blue-500' : ''} ${isPinned ? 'bg-yellow-50' : ''}" onclick="viewAnnouncement(${announcement.id})">
      <div class="flex items-center justify-between">
        <div class="flex-1 min-w-0">
          <div class="flex items-center mb-2">
            <!-- 읽음 상태 표시 -->
            <div class="flex items-center mr-3">
              ${isUnread ? 
                '<div class="w-2 h-2 bg-blue-500 rounded-full mr-2" title="미읽음"></div>' : 
                '<div class="w-2 h-2 bg-gray-300 rounded-full mr-2" title="읽음"></div>'
              }
              ${isPinned ? 
                '<svg class="h-4 w-4 text-yellow-600 mr-2" fill="currentColor" viewBox="0 0 20 20" title="고정된 공지사항"><path d="M4 3a2 2 0 100 4h12a2 2 0 100-4H4z"/><path fill-rule="evenodd" d="M3 8a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/></svg>' : 
                ''
              }
            </div>
            
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${announcement.priority_color} mr-3">
              ${announcement.priority_text}
            </span>
            <h3 class="text-sm font-medium ${isUnread ? 'text-gray-900 font-semibold' : 'text-gray-900'} truncate flex-1">
              ${highlightSearchTerm(announcement.title)}
            </h3>
          </div>
          
          <!-- 내용 미리보기 -->
          <div class="text-sm text-gray-600 mb-2 line-clamp-2">
            ${highlightSearchTerm(announcement.content)}
          </div>
          
          <!-- 메타 정보 -->
          <div class="flex flex-wrap items-center text-xs text-gray-500 gap-x-4 gap-y-1">
            <div class="flex items-center">
              <svg class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
              </svg>
              ${announcement.department}
            </div>
            <div class="flex items-center">
              <svg class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
              ${announcement.author}
            </div>
            <div class="flex items-center">
              <svg class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              ${announcement.time_ago_text}
            </div>
            <div class="flex items-center">
              <svg class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
              </svg>
              조회 ${announcement.view_count}회
            </div>
          </div>
        </div>
        <div class="ml-4 flex-shrink-0 flex items-center">
          ${isUnread ? '<span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full mr-2">NEW</span>' : ''}
          <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
    </li>
  `;
  }).join('');
}

// 검색어 하이라이팅 함수
function highlightSearchTerm(text) {
  const searchTerm = document.getElementById('search-input').value.trim();
  if (!searchTerm || !text) return text;
  
  const regex = new RegExp(`(${searchTerm.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')})`, 'gi');
  return text.replace(regex, '<mark class="bg-yellow-200 px-1 py-0.5 rounded">$1</mark>');
}

function viewAnnouncement(id) {
  window.location.href = `/announcements/${id}`;
}

// 실시간 검색 기능
function setupSearchEvents() {
  const searchInput = document.getElementById('search-input');
  
  searchInput.addEventListener('input', function() {
    clearTimeout(searchTimeout);
    
    searchTimeout = setTimeout(() => {
      performSearch();
    }, 500); // 500ms debounce
  });
  
  // Enter 키 즉시 검색
  searchInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      clearTimeout(searchTimeout);
      performSearch();
    }
  });
}

// 검색 실행
function performSearch() {
  if (isLoading) return;
  
  const searchTerm = document.getElementById('search-input').value.trim();
  const startDate = document.getElementById('start-date').value;
  const endDate = document.getElementById('end-date').value;
  const priority = document.getElementById('priority-filter').value;
  const readStatus = document.getElementById('read-status-filter').value;
  const sort = document.getElementById('sort-option').value;
  
  loadAnnouncements({
    search: searchTerm,
    startDate: startDate,
    endDate: endDate,
    priority: priority,
    readStatus: readStatus,
    sort: sort,
    department: currentDepartment
  });
}

// 필터 변경 이벤트 리스너들
function setupFilterEvents() {
  // 날짜 필터
  document.getElementById('start-date').addEventListener('change', performSearch);
  document.getElementById('end-date').addEventListener('change', performSearch);
  
  // 우선순위 필터
  document.getElementById('priority-filter').addEventListener('change', performSearch);
  
  // 읽음 상태 필터
  document.getElementById('read-status-filter').addEventListener('change', performSearch);
  
  // 정렬 옵션
  document.getElementById('sort-option').addEventListener('change', performSearch);
}

// 필터 초기화
function clearFilters() {
  document.getElementById('search-input').value = '';
  document.getElementById('start-date').value = '';
  document.getElementById('end-date').value = '';
  document.getElementById('priority-filter').value = '';
  document.getElementById('read-status-filter').value = '';
  document.getElementById('sort-option').value = 'latest';
  
  // 검색 요약 숨기기
  document.getElementById('search-summary').classList.add('hidden');
  
  // 기본 목록 로드
  loadAnnouncements({ department: currentDepartment });
}

// 로딩 상태 관리
function showSearchLoading() {
  document.getElementById('search-loading').classList.remove('hidden');
}

function hideSearchLoading() {
  document.getElementById('search-loading').classList.add('hidden');
}

// 부서별 필터 기능 (기존 유지하되 새로운 검색 시스템과 통합)
document.querySelectorAll('[data-department]').forEach(link => {
  link.addEventListener('click', function(e) {
    e.preventDefault();
    
    // 활성 탭 업데이트
    document.querySelectorAll('[data-department]').forEach(l => {
      l.className = 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    });
    this.className = 'border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm';
    
    currentDepartment = this.dataset.department;
    
    // 현재 검색 조건들과 함께 새로고침
    performSearch();
  });
});

// 모달 관리
function openNewAnnouncementModal() {
  document.getElementById('new-announcement-modal').classList.remove('hidden');
}

function closeNewAnnouncementModal() {
  document.getElementById('new-announcement-modal').classList.add('hidden');
  document.getElementById('new-announcement-form').reset();
}

// 새 공지사항 등록
document.getElementById('new-announcement-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const token = localStorage.getItem('auth_token');
  const formData = new FormData(e.target);
  
  const announcementData = {
    title: formData.get('title'),
    content: formData.get('content'),
    department: formData.get('department'),
    priority: parseInt(formData.get('priority')),
    is_published: formData.get('is_published') === 'on'
  };
  
  try {
    const response = await fetch('http://localhost:7001/api/v1/announcements', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ announcement: announcementData })
    });
    
    const data = await response.json();
    
    if (data.status === 'success') {
      closeNewAnnouncementModal();
      loadAnnouncements(currentDepartment);
      alert('공지사항이 성공적으로 등록되었습니다.');
    } else {
      alert('등록 실패: ' + (data.message || '알 수 없는 오류'));
    }
  } catch (error) {
    alert('API 연결 실패');
  }
});

// 페이지 로드 시 초기화
document.addEventListener('DOMContentLoaded', () => {
  // 이벤트 리스너들 설정
  setupSearchEvents();
  setupFilterEvents();
  
  // 초기 공지사항 목록 로드
  loadAnnouncements();
  
  // 모바일 부서 선택 드롭다운 이벤트
  document.getElementById('department-select').addEventListener('change', function() {
    currentDepartment = this.value;
    performSearch();
  });
});
</script>
